// <auto-generated />
using System;
using Dashboard.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dashboard.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190708171419_ExtendingUserModel")]
    partial class ExtendingUserModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Dashboard.API.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ParentUserId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("ParentUserId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Dashboard.API.Models.SettingField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ParentSettingId");

                    b.Property<string>("name");

                    b.Property<string>("type");

                    b.Property<string>("value");

                    b.HasKey("Id");

                    b.HasIndex("ParentSettingId");

                    b.ToTable("SettingFields");
                });

            modelBuilder.Entity("Dashboard.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("EmailAddress");

                    b.Property<DateTime>("LastActive");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int>("UserLevel");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dashboard.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("Dashboard.API.Models.Setting", b =>
                {
                    b.HasOne("Dashboard.API.Models.User", "ParentUser")
                        .WithMany("UserSettings")
                        .HasForeignKey("ParentUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dashboard.API.Models.SettingField", b =>
                {
                    b.HasOne("Dashboard.API.Models.Setting", "ParentSetting")
                        .WithMany("Fields")
                        .HasForeignKey("ParentSettingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
